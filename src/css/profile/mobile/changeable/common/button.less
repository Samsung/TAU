// Pseudo element ::after is reserved for icon
// Pseudo element ::before is reserved for press effect

tau-button {
	.default-button();
}

@btn_press_effect_size: (78 * .15) * @unit_base;

@keyframes btn_press_animation {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}

@keyframes btn_pressup_animation {
	0% {
		opacity: 1;
	}
	33% {
		opacity: 1;
	}
	100% {
		opacity: 0;
	}
}

@keyframes btn_press_animation_nobg {
	0% {
		opacity: 1;
		.transform(translate(-50%, -50%) scale(1));
	}
	100% {
		opacity: 1;
		.transform(translate(-50%, -50%) scale(1.425));
	}
}

@keyframes tabbar-press {
	0% {
		opacity: 0;
	}
	3% {
		opacity: 1;
	}
	67% {
		opacity: 1;
	}
	100% {
		opacity: 0;
	}
}

button.ui-btn,
input[type="button"].ui-btn {
	.appearance(none);
	width: 100%;
	border: none;
	outline: none;
}

a.ui-btn {
	text-decoration: none;
	width: 100%;
}

.ui-btn {
	position: relative;
	padding: 0 24 * @unit_base;
	height: 78 * @unit_base;
	line-height: 78 * @unit_base;
	vertical-align: middle;
	text-overflow: ellipsis;
	text-align: center;
	color: @color_button_text_normal;
	font-size: @font_size_button_text;
	white-space: nowrap;
	cursor: pointer;
	background-color: @color_button_bg;
	box-sizing: border-box;
	.user-select(none);
	z-index: 0;
	border-radius: 52 * @unit_base;
	&::before {
		position: absolute;
		top: 50%;
		left: 50%;
		width: 100%;
		height: 100%;
		opacity: 0;
		content: "";
		border-width: 0;
		.transform(translate(-50%, -50%));
	}

	&::after {
		position: absolute;
		top: 50%;
		left: 50%;
		.mask-size(100% 100%);
		.transform(translate(-50%, -50%));
		.mask-repeat(no-repeat);
		.mask-position(center);
		.mask-size(100%);
		content: "";
	}

	&:not(.ui-btn-nobg) {
		&::before {
			z-index: -1;
			border-radius: 52 * @unit_base;
			background-color: @color_button_press_effect;
			box-sizing: border-box;
		}

		&.ui-btn-active {
			&::before {
				opacity: 1;
				.animation(btn_press_animation 15ms linear);
			}
			&.ui-btn-inactive {
				&::before {
					.animation(btn_pressup_animation 300ms linear);
				}
			}
		}
	}

	&.ui-btn-focus {
		outline: 4 * @unit_base solid @color_focus_border;
	}

	&.ui-btn-nobg {
		.LESSui-btn-nobg();
	}

	&.ui-btn-icon {
		&.ui-btn-circle {
			width: 98 * @unit_base;
			height: 98 * @unit_base;

			&::after {
				background-color: @color_button_icon;
			}
		}

		&.ui-btn-nobg {
			width: 80 * @unit_base;
			height: 80 * @unit_base;
			text-indent: -9999 * @unit_base;
			padding: 20 * @unit_base 0;
			border-radius: 0;

			&.ui-inline {
				width: 80 * @unit_base;
			}

			&::after {
				width: 50 * @unit_base;
				height: 50 * @unit_base;
			}
		}
	}

	&.ui-inline {
		display: inline-block;
		width: auto;
	}

	&.ui-state-disabled {
		pointer-events: none;
		background-color: @color_button_bg_dim;
		color: @color_button_text_dim;
	}

	&.ui-btn-icon {
		&.ui-btn-icon-only {
			text-indent: -9999 * @unit_base;
			width: 208 * @unit_base;
		}

		&::after {
			width: 60 * @unit_base;
			height: 60 * @unit_base;
			background-color: @color_button_icon;
		}

		&.ui-btn-active {
			&::after {
				background-color: @color_button_icon_press;
			}
		}

		&.ui-icon {
			&-add::after {
				mask-image: url("images/controls/core_button_add.png");
			}

			&-delete::after {
				mask-image: url("images/controls/core_button_delete.png");
			}

			&-cancel::after {
				mask-image: url("images/controls/core_button_cancel.png");
			}

			&-reorder::after {
				mask-image: url("images/controls/core_button_reorder.png");
			}
		}

		&.ui-btn-icon {
			&-left {
				padding-left: 130 * @unit_base;
				padding-right: 60 * @unit_base;
				&::after {
					left: 58 * @unit_base;
				}
			}

			&-right {
				padding-left: 60 * @unit_base;
				padding-right: 130 * @unit_base;
				&::after {
					right: 58 * @unit_base;
					left: auto;
				}
			}

			&-left,
			&-right {
				&::after {
					top: 50%;
					.transform(translate(0, -50%));
				}
			}

			&-top {
				padding-top: 130 * @unit_base;
				padding-bottom: 80 * @unit_base;
				&::after {
					top: 56 * @unit_base;
				}
			}

			&-bottom {
				padding-top: 80 * @unit_base;
				padding-bottom: 130 * @unit_base;
				&::after {
					bottom: 56 * @unit_base;
				}
			}

			&-top,
			&-bottom {
				&::after {
					left: 50%;
					.transform(translate(-50%, 0));
				}
			}
		}
	}
	&.ui-btn-text-light,
	&.ui-btn-text-dark {
		min-height: 48 * @unit_base;
		height: 48 * @unit_base;
		line-height: 34 * @unit_base;
		min-width: 96 * @unit_base;
		font-size: @font_size_button_text_light_dark;
		padding: 8 * @unit_base 24 * @unit_base;

		&.ui-btn-active {
			font-size: @font_size_button_text_light_dark_pressed;
		}
	}

	&.ui-btn-text-light {
		background-color: @color_button_light_text;
		&.ui-btn-active {
			background-color: @color_button_light_text_pressed;
		}
	}

	&.ui-btn-text-dark {
		background-color: @color_button_dark_text;
		&.ui-btn-active::before {
			background-color: @color_button_dark_text_pressed;
		}
	}

}

.ui-listview li.ui-li-has-btn {
	box-sizing: border-box;
}

.ui-li-has-btn {
	display: flex;
	height: 120 * @unit_base;

	.ui-btn {
		margin: -14 * @unit_base auto;
		max-width: 496 * @unit_base;
	}
	.ui-btn ~ .ui-btn {
		margin-left: 16 * @unit_base;
	}
}

.LESSui-btn-nobg() {
	background-color: transparent;
	color: @color_button_text_nobg;
	&::before {
		background-color: @color_button_bg_nobg;
		opacity: 0;
		border-radius: 50%;
		width: 80 * @unit_base;
		height: 80 * @unit_base;
		.transform(translate(-50%, -50%) scale(1));
	}

	&.ui-btn-active {
		&::before {
			.animation(btn_press_animation_nobg linear 315ms);
			opacity: 1;
			.transform(translate(-50%, -50%) scale(1.425));
		}
		&.ui-btn-inactive {
			&::before {
				.animation(btn_pressup_animation 300ms linear);
				opacity: 0;
				.transform(translate(-50%, -50%) scale(1.425));
			}
			&::after {
				.animation(btn_pressup_animation 300ms linear);
				opacity: 0;
			}
		}
	}
	&.ui-btn-icon {
		&::after {
			background-color: @color_button_icon_nobg;
		}
		&.ui-btn-active {
			&::after {
				background-color: @color_button_icon_nobg_press;
			}
		}

		&.ui-icon-delete {
			&::after {
				background-color: @color_button_delete;
				.transition(background-color 15ms);
			}
			&.ui-btn-active::after {
				background-color: @color_button_delete_press;
				.transition(background-color 300ms);
			}
		}
	}
}
